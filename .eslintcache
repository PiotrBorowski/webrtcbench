[{"C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\index.tsx":"1","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\reportWebVitals.ts":"2","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\App.tsx":"3","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\services\\ffmpeg.ts":"4","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\components\\VideoComponent.tsx":"5","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\page\\WebRTCPage.tsx":"6","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\services\\peer.ts":"7","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\services\\sdpTransport.ts":"8","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\page\\WebRTCStaticVideoPage.tsx":"9"},{"size":500,"mtime":1611414839569,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611414839569,"results":"12","hashOfConfig":"11"},{"size":1846,"mtime":1622141725976,"results":"13","hashOfConfig":"11"},{"size":377,"mtime":1612636184589,"results":"14","hashOfConfig":"11"},{"size":519,"mtime":1622140154207,"results":"15","hashOfConfig":"11"},{"size":2001,"mtime":1622141599499,"results":"16","hashOfConfig":"11"},{"size":1975,"mtime":1622298351097,"results":"17","hashOfConfig":"11"},{"size":2496,"mtime":1619692420069,"results":"18","hashOfConfig":"11"},{"size":2104,"mtime":1622296854446,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1rz0ykl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\index.tsx",[],["43","44"],"C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\reportWebVitals.ts",[],"C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\App.tsx",["45","46"],"import React, { useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { WebRTCPage } from \"./page/WebRTCPage\";\nimport { WebRTCStaticVideoPage } from \"./page/WebRTCStaticVideoPage\";\n\nfunction App() {\n  // const videoRefRef = useRef<HTMLVideoElement>(null);\n  // const videoWebRTCRef = useRef<HTMLVideoElement>(null);\n  // const videoHLSRef = useRef<HTMLVideoElement>(null);\n  // const videoDASHRef = useRef<HTMLVideoElement>(null);\n  // const videoSRTRef = useRef<HTMLVideoElement>(null);\n\n  // const start = async () => {\n  //   await Promise.all([startHls()]);\n  // };\n\n  // const startRef = async () => {\n  //   videoRefRef.current.srcObject = await startCapture({\n  //     video: true,\n  //     audio: true,\n  //   });\n  // };\n\n  // const startHls = async () => {\n  //   var hls = new Hls({\n  //     liveBackBufferLength: 0,\n  //     maxBufferLength: 1,\n  //     maxMaxBufferLength: 1,\n  //   });\n  //   hls.loadSource(`http://127.0.0.1:8887/stream.m3u8`);\n  //   hls.attachMedia(videoHLSRef.current);\n  // };\n\n  // useEffect(() => {\n  //   testFFmpeg();\n  // }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <ul>\n          <li>\n            <Link to=\"/dash\">DASH</Link>\n          </li>\n          <li>\n            <Link to=\"/hls\">HLS</Link>\n          </li>\n          <li>\n            <Link to=\"/srt\">SRT</Link>\n          </li>\n          <li>\n            <Link to=\"/webrtc\">WebRTC</Link>\n          </li>\n          <li>\n            <Link to=\"/webrtcStatic\">WebRTC Static Video</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path=\"/webrtc\" component={WebRTCPage} />\n          <Route path=\"/webrtcStatic\" component={WebRTCStaticVideoPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\services\\ffmpeg.ts",[],["47","48"],"C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\components\\VideoComponent.tsx",[],"C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\page\\WebRTCPage.tsx",["49","50"],"import react, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { VideoComponent } from \"../components/VideoComponent\";\r\nimport { call, createPeer, getLocalMediaStream, init } from \"../services/peer\";\r\n\r\nexport const WebRTCPage = () => {\r\n  const remoteRef = useRef(null);\r\n  const localRef = useRef(null);\r\n\r\n  const [localId, setLocalId] = useState(\"\");\r\n  const [remoteId, setRemoteId] = useState(\"\");\r\n  const [peer, setPeer] = useState(null);\r\n  const [localStream, setLocalStream] = useState();\r\n\r\n  const getMediaStream = async () => {\r\n    const stream = await getLocalMediaStream({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n    localRef.current.srcObject = stream;\r\n    setLocalStream(stream);\r\n  };\r\n\r\n  const connect = useCallback(async () => {\r\n    const p = createPeer(localId);\r\n    setPeer(p);\r\n    await getMediaStream();\r\n    init(p, localStream, (remoteStream) => {\r\n      remoteRef.current.srcObject = remoteStream;\r\n    });\r\n  }, [remoteRef, localStream, localId]);\r\n\r\n  const callToRemote = useCallback(() => {\r\n    call(peer, remoteId, localStream, (remoteStream) => {\r\n      remoteRef.current.srcObject = remoteStream;\r\n    });\r\n  }, [peer, remoteId, remoteRef, localStream]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flex: 1 }}>\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"column\", marginRight: 20 }}\r\n      >\r\n        <input\r\n          placeholder=\"local\"\r\n          style={{ height: 50 }}\r\n          onChange={(e) => setLocalId(e.target.value)}\r\n          value={localId}\r\n        />\r\n        <input\r\n          placeholder=\"remote\"\r\n          style={{ height: 50 }}\r\n          onChange={(e) => setRemoteId(e.target.value)}\r\n          value={remoteId}\r\n        />\r\n        <button onClick={connect}>Connect</button>\r\n        <button onClick={callToRemote}>Call</button>\r\n      </div>\r\n\r\n      <VideoComponent title=\"local\" ref={localRef} />\r\n\r\n      <VideoComponent title=\"remote\" ref={remoteRef} />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\services\\peer.ts",[],"C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\services\\sdpTransport.ts",["51","52","53","54"],"/*\r\n * A module with the sole purpose of removing all non h264 options from an sdpOffer\r\n *\r\n * We use this to prevent any transcoding from the Kurento side if Firefox or Chrome offer VP8/VP9 as\r\n * the default format.\r\n */\r\n\r\nimport sdpTransform from \"sdp-transform\";\r\n\r\nexport const transformSdp = function (sdp, preferredProfile = null) {\r\n  let mediaIndex = 0;\r\n  let res = sdpTransform.parse(sdp);\r\n  let validPayloads;\r\n\r\n  if (res.media[0].type === \"audio\") {\r\n    // Audio\r\n    res.media[mediaIndex].rtp = res.media[mediaIndex].rtp.filter(function (\r\n      elem\r\n    ) {\r\n      return elem.codec === \"opus\";\r\n    });\r\n\r\n    validPayloads = res.media[mediaIndex].rtp.map(function (elem) {\r\n      return elem.payload;\r\n    });\r\n\r\n    res.media[mediaIndex].fmtp = res.media[mediaIndex].fmtp.filter(function (\r\n      elem\r\n    ) {\r\n      return validPayloads.indexOf(elem.payload) >= 0;\r\n    });\r\n\r\n    res.media[mediaIndex].payloads = validPayloads.join(\" \");\r\n\r\n    mediaIndex += 1;\r\n  }\r\n\r\n  // Video\r\n  const availablePayloads = res.media[mediaIndex].rtp.map((elem) => {\r\n    return elem.payload;\r\n  });\r\n\r\n  res.media[mediaIndex].rtp = res.media[mediaIndex].rtp.filter(function (elem) {\r\n    // Replace H264 for VP8 with you wanna allow only VP8\r\n    return elem.codec === \"H264\";\r\n  });\r\n\r\n  preferProfile(res.media[mediaIndex], preferredProfile);\r\n\r\n  validPayloads = res.media[mediaIndex].rtp.map(function (elem) {\r\n    return elem.payload;\r\n  });\r\n\r\n  res.media[mediaIndex].fmtp = res.media[mediaIndex].fmtp.filter(function (\r\n    elem\r\n  ) {\r\n    return validPayloads.indexOf(elem.payload) >= 0;\r\n  });\r\n\r\n  res.media[mediaIndex].rtcpFb = res.media[mediaIndex].rtcpFb.filter(function (\r\n    elem\r\n  ) {\r\n    return validPayloads.indexOf(elem.payload) >= 0;\r\n  });\r\n\r\n  res.media[mediaIndex].payloads = validPayloads.join(\" \");\r\n\r\n  return sdpTransform.write(res);\r\n};\r\n\r\nconst preferProfile = function (mediaLine, profileToFilter) {\r\n  if (profileToFilter == null) {\r\n    return;\r\n  }\r\n\r\n  const profileRegex = /(?:profile\\-level\\-id\\=)([\\d\\w]*)/i;\r\n  const validProfilePayloads = mediaLine.fmtp\r\n    .filter((e) => {\r\n      let profileSpec = profileRegex.exec(e.config);\r\n      return (\r\n        profileSpec && profileSpec[1] && profileSpec[1] === profileToFilter\r\n      );\r\n    })\r\n    .map((e) => e.payload);\r\n\r\n  if (validProfilePayloads.length > 0) {\r\n    mediaLine.rtp = mediaLine.rtp.filter((e) => {\r\n      return validProfilePayloads.includes(e.payload);\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Piotr Borowski\\Desktop\\MGR\\app\\videobench\\src\\page\\WebRTCStaticVideoPage.tsx",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":23},{"ruleId":"62","severity":1,"message":"66","line":1,"column":25,"nodeType":"64","messageId":"65","endLine":1,"endColumn":34},{"ruleId":"58","replacedBy":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","severity":1,"message":"69","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":1,"column":30,"nodeType":"64","messageId":"65","endLine":1,"endColumn":39},{"ruleId":"62","severity":1,"message":"70","line":39,"column":9,"nodeType":"64","messageId":"65","endLine":39,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":76,"column":35,"nodeType":"73","messageId":"74","endLine":76,"endColumn":36,"suggestions":"75"},{"ruleId":"71","severity":1,"message":"72","line":76,"column":42,"nodeType":"73","messageId":"74","endLine":76,"endColumn":43,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"77","line":76,"column":46,"nodeType":"73","messageId":"74","endLine":76,"endColumn":47,"suggestions":"78"},{"ruleId":"62","severity":1,"message":"69","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":1,"column":30,"nodeType":"64","messageId":"65","endLine":1,"endColumn":39},{"ruleId":"62","severity":1,"message":"79","line":3,"column":28,"nodeType":"64","messageId":"65","endLine":3,"endColumn":47},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["80"],["81"],"'react' is defined but never used.","'availablePayloads' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["82","83"],["84","85"],"Unnecessary escape character: \\=.",["86","87"],"'getLocalMediaStream' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"88","fix":"89","desc":"90"},{"messageId":"91","fix":"92","desc":"93"},{"messageId":"88","fix":"94","desc":"90"},{"messageId":"91","fix":"95","desc":"93"},{"messageId":"88","fix":"96","desc":"90"},{"messageId":"91","fix":"97","desc":"93"},"removeEscape",{"range":"98","text":"99"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"100","text":"101"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"102","text":"99"},{"range":"103","text":"101"},{"range":"104","text":"99"},{"range":"105","text":"101"},[2036,2037],"",[2036,2036],"\\",[2043,2044],[2043,2043],[2047,2048],[2047,2047]]